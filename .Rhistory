theta_mle = 0.03571
obs = c(1997, 906, 904, 32)
chisq.test(obs, p = c(0.25*(2+theta_mle), 0.25*(1-theta_mle), 0.25*(1-theta_mle), 0.25*theta_mle))
theta_mle = 0.03571
obs = c(1997, 906, 904, 32)
phats = c(0.25*(2+theta_mle), 0.25*(1-theta_mle), 0.25*(1-theta_mle), 0.25*theta_mle)
chisq.test(obs, p = phats)
exps = sum(obs)*phats
# correct p-value with df = 2
1-pchisq(2.0154, df = 4-1-1)
theta_mle = 0.03571
obs = c(1997, 906, 904, 32)
phats = c(0.25*(2+theta_mle), 0.25*(1-theta_mle), 0.25*(1-theta_mle), 0.25*theta_mle)
# Get the x-squared value
chisq.test(obs, p = phats)
# correct p-value with df = 2
1-pchisq(2.0154, df = 4-1-1)
e = 3800*18/38
0 = 1890
o = 1890
(o-e)^2/e
(o-e)^2/e + (3800-o-2000)^2/2000
shiny::runApp('Desktop/spring2019/stat133/Labs/Lab10')
runApp('Desktop/spring2019/stat133/Labs/Lab10')
runApp('Desktop/spring2019/stat133/Labs/Lab10')
runApp('Desktop/spring2019/stat133/Labs/Lab10')
runApp('Desktop/spring2019/stat133/Labs/Lab10')
knitr::opts_chunk$set(echo = TRUE)
m = matrix(c(8, 15, 13, 14, 19, 15, 15, 4, 7, 3, 1, 4), nrow = 4, byrow=TRUE)
result = chisq.test(m, correct = FALSE)
result
m = matrix(c(165-95, 95, 152-52, 52, 85-52, 52, 67-35, 35, 85-37, 37), nrow = 5, byrow=TRUE)
result = chisq.test(m, correct = FALSE)
result
#chlorpromazine and placebo
m = matrix(c(165-95, 95, 152-52, 52), nrow = 2, byrow=TRUE)
result = chisq.test(m, correct = FALSE)
result1
#chlorpromazine and placebo
m = matrix(c(165-95, 95, 152-52, 52), nrow = 2, byrow=TRUE)
result1 = chisq.test(m, correct = FALSE)
result1
#chlorpromazine and dimenhydrinate
m = matrix(c(165-95, 95, 152-52, 52, 85-52, 52, 67-35, 35, 85-37, 37), nrow = 5, byrow=TRUE)
result = chisq.test(m, correct = FALSE)
result
#chlorpromazine and dimenhydrinate
m = matrix(c(165-95, 95, 152-52, 52, 85-52, 52, 67-35, 35, 85-37, 37), nrow = 5, byrow=TRUE)
result = chisq.test(m, correct = FALSE)
result
#chlorpromazine and dimenhydrinate
m = matrix(c(165-95, 95, 152-52, 52, 85-52, 52, 67-35, 35, 85-37, 37), nrow = 5, byrow=TRUE)
result = chisq.test(m, correct = FALSE)
result
#chlorpromazine and dimenhydrinate
m = matrix(c(165-95, 95, 152-52, 52, 85-52, 52, 67-35, 35, 85-37, 37), nrow = 5, byrow=TRUE)
result = chisq.test(m, correct = FALSE)
result
#chlorpromazine and dimenhydrinate
m = matrix(c(165-95, 95, 152-52, 52, 85-52, 52, 67-35, 35, 85-37, 37), nrow = 5, byrow=TRUE)
result = chisq.test(m, correct = FALSE)
result
#chlorpromazine and dimenhydrinate
m = matrix(c(165-95, 95, 152-52, 52, 85-52, 52, 67-35, 35, 85-37, 37), nrow = 5, byrow=TRUE)
result = chisq.test(m, correct = FALSE)
result
#chlorpromazine and dimenhydrinate
m = matrix(c(165-95, 95, 152-52, 52, 85-52, 52, 67-35, 35, 85-37, 37), nrow = 5, byrow=TRUE)
result = chisq.test(m, correct = FALSE)
result
#chlorpromazine and dimenhydrinate
m = matrix(c(165-95, 95, 152-52, 52, 85-52, 52, 67-35, 35, 85-37, 37), nrow = 5, byrow=TRUE)
result = chisq.test(m, correct = FALSE)
result
#chlorpromazine and dimenhydrinate
m = matrix(c(165-95, 95, 152-52, 52, 85-52, 52, 67-35, 35, 85-37, 37), nrow = 5, byrow=TRUE)
result = chisq.test(m, correct = FALSE)
result
#chlorpromazine and dimenhydrinate
m = matrix(c(165-95, 95, 152-52, 52, 85-52, 52, 67-35, 35, 85-37, 37), nrow = 5, byrow=TRUE)
result = chisq.test(m, correct = FALSE)
result
m = matrix(c(165-95, 95, 152-52, 52, 85-52, 52, 67-35, 35, 85-37, 37), nrow = 5, byrow=TRUE)
result = chisq.test(m, correct = FALSE)
result
m = matrix(c(165-95, 95, 152-52, 52, 85-52, 52, 67-35, 35, 85-37, 37), nrow = 5, byrow=TRUE)
result = chisq.test(m, correct = FALSE)
result
#chlorpromazine and placebo
m = matrix(c(165-95, 95, 152-52, 52), nrow = 2, byrow=TRUE)
result = chisq.test(m, correct = FALSE)
result
#dimenhydrinate and placebo
m = matrix(c(165-95, 95, 85-52, 52), nrow = 2, byrow=TRUE)
result = chisq.test(m, correct = FALSE)
result
#pentobarbital(100mg) and placebo
m = matrix(c(165-95, 95, 67-35, 35), nrow = 2, byrow=TRUE)
result = chisq.test(m, correct = FALSE)
result
#pentobarbital(150mg) and placebo
m = matrix(c(165-95, 95, 85-37, 37), nrow = 2, byrow=TRUE)
result = chisq.test(m, correct = FALSE)
result
-1/sqrt(2)
0.2398*(1-0.2398)
?prod
B = 10000
n = 100
fun <- function() {
x <- rnorm(n)
y <- rnorm(n, mean = 1)
p <- prod(x>y)
}
vec = replicate(B, fun())
mean(vec)
B = 10000
n = 1000
fun <- function() {
x <- rnorm(n)
y <- rnorm(n, mean = 1)
p <- prod(x>y)
}
vec = replicate(B, fun())
mean(vec)
B = 10000
n = 1000
fun <- function() {
x <- rnorm(n)
y <- rnorm(n, mean = 1)
p <- prod(x>y)
}
vec = replicate(B, fun())
vec
B = 10000
n = 1000
fun <- function() {
x <- rnorm(n)
y <- rnorm(n, mean = 1)
p <- sum(x>y)/n
return(p)
}
vec = replicate(B, fun())
vec
B = 10000
n = 1000
fun <- function() {
x <- rnorm(n)
y <- rnorm(n, mean = 1)
p <- sum(x>y)/n
return(p)
}
vec = replicate(B, fun())
mean(vec)
B = 10000
n = 1000
fun <- function() {
x <- rnorm(n)
y <- rnorm(n, mean = 1)
p <- sum(x>y)/length(x)
return(p)
}
vec = replicate(B, fun())
mean(vec)
B = 10000
n = 1000
fun <- function() {
x <- rnorm(1)
y <- rnorm(n, mean = 1)
p <- sum(x>y)/length(x>y)
return(p)
}
vec = replicate(B, fun())
mean(vec)
B = 10000
n = 1000
fun <- function() {
x <- rnorm(1)
y <- rnorm(n, mean = 1)
p <- prod(x>y)
return(p)
}
vec = replicate(B, fun())
mean(vec)
B = 10000
n = 1000
fun <- function() {
x <- rnorm(1)
y <- rnorm(2, mean = 1)
p <- sum(x>y)/length(x>y)
return(p)
}
vec = replicate(B, fun())
mean(vec)
B = 10000
n = 1000
fun <- function() {
x <- rnorm(1)
y <- rnorm(2, mean = 1)
p <- prod(x>y)
return(p)
}
vec = replicate(B, fun())
mean(vec)
B = 1
n = 1
fun <- function() {
x <- rnorm(1)
y <- rnorm(2, mean = 1)
p <- prod(x>y)
return(p)
}
vec = replicate(B, fun())
mean(vec)
B = 3
n = 1
fun <- function() {
x <- rnorm(1)
y <- rnorm(2, mean = 1)
p <- prod(x>y)
return(p)
}
vec = replicate(B, fun())
mean(vec)
B = 3
n = 2
fun <- function() {
x <- rnorm(1)
y <- rnorm(2, mean = 1)
p <- prod(x>y)
return(p)
}
vec = replicate(B, fun())
mean(vec)
x <- rnorm(1)
y <- rnorm(2, mean = 1)
prod(x>y)
B = 10000
fun <- function() {
x <- rnorm(1)
y <- rnorm(2, mean = 1)
p <- prod(x>y)
return(p)
}
vec = replicate(B, fun())
mean(vec)
B = 10000
fun <- function() {
x <- rnorm(1)
y <- rnorm(2, mean = 1)
p <- prod(x>y)
return(p)
}
vec = replicate(B, fun())
mean(vec)
B = 10000
fun <- function() {
x <- rnorm(1)
y <- rnorm(2, mean = 1)
p <- prod(x>y)
return(p)
}
vec = replicate(B, fun())
mean(vec)
B = 10000
fun <- function() {
x <- rnorm(1)
y <- rnorm(2, mean = 1)
p <- prod(x>y)
return(p)
}
vec = replicate(B, fun())
mean(vec)
B = 1000000
fun <- function() {
x <- rnorm(1)
y <- rnorm(2, mean = 1)
p <- prod(x>y)
return(p)
}
vec = replicate(B, fun())
B = 100000
fun <- function() {
x <- rnorm(1)
y <- rnorm(2, mean = 1)
p <- prod(x>y)
return(p)
}
vec = replicate(B, fun())
mean(vec)
B = 100000
fun <- function() {
x <- rnorm(1)
y <- rnorm(2, mean = 1)
p <- prod(x>y)
return(p)
}
vec = replicate(B, fun())
mean(vec)
B = 100000
fun <- function() {
x <- rnorm(1)
y <- rnorm(2, mean = 1)
p <- prod(x>y)
return(p)
}
vec = replicate(B, fun())
mean(vec)
B = 100000
fun <- function() {
x <- rnorm(1)
y <- rnorm(2, mean = 1)
p <- prod(x>y)
return(p)
}
vec = replicate(B, fun())
mean(vec)
B = 100000
fun <- function() {
x <- rnorm(1)
y <- rnorm(2, mean = 1)
p <- prod(x>y)
return(p)
}
vec = replicate(B, fun())
mean(vec)
B = 100000
fun <- function() {
x <- rnorm(1)
y <- rnorm(2, mean = 1)
p <- prod(x>y)
return(p)
}
vec = replicate(B, fun())
mean(vec)
B = 100000
fun <- function() {
x <- rnorm(1)
y <- rnorm(2, mean = 1)
p <- prod(x>y)
return(p)
}
vec = replicate(B, fun())
mean(vec)
B = 100000
fun <- function() {
x <- rnorm(1)
y <- rnorm(2, mean = 1)
p <- prod(x>y)
return(p)
}
vec = replicate(B, fun())
mean(vec)
0.1135-0.2398^2
B = 10000
fun <- function() {
x <- rnorm(1)
y <- rnorm(2, mean = 1)
p <- prod(x>y)
return(p)
}
vec = replicate(B, fun())
mean(vec)
B = 10
fun <- function() {
x <- rnorm(1)
y <- rnorm(2, mean = 1)
p <- prod(x>y)
return(p)
}
vec = replicate(B, fun())
mean(vec)
B = 10000
fun <- function() {
x <- rnorm(1)
y <- rnorm(2, mean = 1)
p <- prod(x>y)
return(p)
}
vec = replicate(B, fun())
mean(vec)
B = 10000
fun <- function() {
x <- rnorm(2)
y <- rnorm(1, mean = 1)
p <- prod(x>y)
return(p)
}
vec = replicate(B, fun())
mean(vec)
B = 10000
fun <- function() {
x <- rnorm(2)
y <- rnorm(1, mean = 1)
p <- prod(x>y)
return(p)
}
vec = replicate(B, fun())
mean(vec)
B = 10000
fun <- function() {
x <- rnorm(2)
y <- rnorm(1, mean = 1)
p <- prod(x>y)
return(p)
}
vec = replicate(B, fun())
mean(vec)
0.114-0.2398^2
shiny::runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
no[1] = initial
no[1] = initial# create the dataframe
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
knitr::opts_chunk$set(echo = TRUE, error = TRUE)
library(ggplot2)
ggplot(modalities, aes(x=year)) + geom_line(aes(y = no_contrib,
or = "darkblue")) + geom_line(aes(y = fixed_contrib,
or = "red")) + geom_line(aes(y = growing_contrib,
or = "darkgreen")) + ylab("Amount Obtained($)") + scale_x_continuous(breaks=seq(0,10,1)) + scale_
or_identity(name = "modality", breaks = c("darkgreen", "red","darkblue"), labels = c("growing_contrib", "fixed_contrib", "no_contrib"), guide = "legend") + ggtitle("Timeline of Growth under Different Investment Modes")
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
shiny::runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
runApp('Desktop/spring2019/stat133/repo/workout02')
shiny::runApp('Desktop/spring2019/stat133/repo/workout02')
install.packages('rsconnect')
library(rsconnect)
if(!require("devtools"))
install.packages("devtools")
devtools::install_github("rstudio/rsconnect")
rsconnect::setAccountInfo(name='christinajin01',
token='D6F66509A8BC355C262F173BC48F22DD',
secret='<SECRET>')
rsconnect::setAccountInfo(name='christinajin01', token='D6F66509A8BC355C262F173BC48F22DD', secret='5dwu7IYOZ8zKsYBASr+zClOW7aXwLi02yP39SZa8')
library(rsconnect)
getwd()
shiny::runApp('Desktop/spring2019/stat133/repo/workout02')
setwd("Desktop")
gwd()
getwd()
setwd("stat133")
setwd("spring2019/stat133")
setwd("repo")
getwd()
setwd("workout02")
getwd()
rsconnect::deployApp('path/to/your/app')
rsconnect::deployApp('app.R')
setwd("..")
getwd()
rsconnect::deployApp('workout02')
